---
title: "Principal component analysis for temperature and precipitation variables"
author: Dani Wiley
date:   last-modified
editor: visual
description: |
  We perform principal component analysis to reduce 19 BioClimatic Variables having to do with temperature & precipitation into two dimensions. 

format:
  html:
    theme:            litera
    highlight-style:  atom-one
    page-layout:      full      # article, full   # https://quarto.org/docs/output-formats/page-layout.html
    toc:              true
    toc-location:     body  # body, left, right
    number-sections:  false
    self-contained:         false     # !!! this can cause a render error
    code-overflow:          scroll    # scroll, wrap
    code-block-bg:          true
    code-block-border-left: "#30B0E0"
    code-copy:              false     # true, false, hover a copy buttom in top-right of code block
---

Code last updated: 7/13/2025

# ------------------------------------------------
# Load packages

```{r}
library(dplyr)
library(stats)
library(factoextra)
library(arm)
library(ggplot2)
library(corrplot)
```

# Load Data
```{r}
#Infection prevalence datasets:---------------------------------------------------
#hp prevalence dataset: contains all positive and negative individuals
df <- read.csv("Host_Sample_Dataset.csv")
df <- dplyr::filter(df, !is.na(df$Haem_01))
df$Haem_01 <- as.factor(df$Haem_01)
```

#------------------------------------------------

# WorldClim Environmental variables

WORLDCLIM CODEBOOK

```         
 Downloaded 1 March 2024 at 30s resolution. They are coded as follows:  
 BIO1  = Annual Mean Temperature  
 BIO2  = Mean Diurnal Range (Mean of monthly (max temp - min temp)) 
 BIO3  = Isothermality (BIO2/BIO7) (* 100) 
 BIO4  = Temperature Seasonality (standard deviation *100) 
 BIO5  = Max Temperature of Warmest Month 
 BIO6  = Min Temperature of Coldest Month 
 BIO7  = Temperature Annual Range (BIO5-BIO6) 
 BIO8  = Mean Temperature of Wettest Quarter 
 BIO9  = Mean Temperature of Driest Quarter 
 BIO10 = Mean Temperature of Warmest Quarter 
 BIO11 = Mean Temperature of Coldest Quarter 
 BIO12 = Annual Precipitation 
 BIO13 = Precipitation of Wettest Month 
 BIO14 = Precipitation of Driest Month 
 BIO15 = Precipitation Seasonality (Coefficient of Variation) 
 BIO16 = Precipitation of Wettest Quarter 
 BIO17 = Precipitation of Driest Quarter
 BIO18 = Precipitation of Warmest Quarter 
 BIO19 = Precipitation of Coldest Quarter  
```

# ------------------------------------------------

# Temperature PCA
```{r}
#Separate out wanted variables
bioclim_temp <- df[c(47:57)] #ALWAYS DOUBLE CHECK THESE

# PCA of temperature data
anyNA(bioclim_temp)       # Checks for NA
library(stats)
temp.PCA <-
  prcomp( 
    bioclim_temp, center = TRUE, scale. = TRUE)
summary(temp.PCA)
#PC1 explains 53.9% of variation in the data 
#PC2 explains a further 82.3% of the variation in the data

#Adding PC1 & PC2 to df--------------------------------------------------------
# Add PCs to the dataframe as variables: 
df$tempPC1 <- temp.PCA$x[,"PC1"]
df$tempPC1 <- as.numeric(unlist(df$tempPC1))
df$tempPC2 <- temp.PCA$x[,"PC2"]
df$tempPC2 <- as.numeric(unlist(df$tempPC2))

summary(df$tempPC1)
#     Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
# -5.16540 -1.21216 -0.86072  0.00000 -0.01636  6.70214

summary(df$tempPC2)
#     Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
# -4.77305 -0.68278 -0.30758  0.00000  0.03087  6.97111 
```

```{r, fig.height= 8, fig.width=10}
#PCA Scree plot:
fviz_eig(temp.PCA)
#-----------------------------Visualizing loadings------------------------------
#PCA Loadings:
fviz_pca_var(temp.PCA, col.var = "contrib")
#Contributions to Temperature PC1
fviz_contrib(temp.PCA, choice = "var", axes = 1)

#As you go up PC1
#For PC1 the variables below all contribute the most
#BIO1: Annual Mean Temperature                  As tempPC1 increases, Annual Mean Temperature decreases
ggplot(df, aes(x = tempPC1 , y = bio1)) + geom_line()
#BIO8: Mean Temperature of Wettest Quarter      As tempPC1 increases, Mean Temperature of Wettest Quarter decreases
ggplot(df, aes(x = tempPC1 , y = bio8)) + geom_line()
#BIO11:Mean Temperature of Coldest Quarter      As tempPC1 increases, Mean Temperature of Coldest Quarter decreases
ggplot(df, aes(x = tempPC1, y = bio11)) + geom_line()
#BIO10: Mean Temp of Warmest Quarter            As tempPC1 increases, Mean Temp of Warmest Quarter decreases
ggplot(df, aes(x = tempPC1 , y = bio10)) + geom_line()
#BIO6: Min Temperature of Coldest Month         As tempPC1 increases, Min Temperature of Coldest Month decreases
ggplot(df, aes(x = tempPC1 , y = bio6)) + geom_line()
#BIO5: Max Temperature of Warmest Month         As tempPC1 increases, Max Temperature of Warmest Month decreases
ggplot(df, aes(x = tempPC1 , y = bio5)) + geom_line()

#-------------------------------------------------------------------------------------------
#Contributions to Temperature PC2
fviz_contrib(temp.PCA, choice = "var", axes = 2)
#For PC2 the variables below all contribute the most:
#BIO4: Temperature Seasonality (standard deviation *100)  As tempPC2 increases, Temperature Seasonality increases
ggplot(df, aes(x =  tempPC2 , y = bio4)) + geom_line()
#BIO7: Temperature Annual Range (BIO5-BIO6)               As tempPC2 increases, Temperature Annual Range (BIO5-BIO6) increases
ggplot(df, aes(x =  tempPC2 , y = bio7)) + geom_line()
#BIO9: Mean Temperature of Driest Quarter                 AS tempPC2 increases, Mean Temperature of Driest Quarter increases
ggplot(df, aes(x =  tempPC2 , y = bio9)) + geom_line() 
#BIO3: Isothermality (BIO2/BIO7) (* 100)                  As tempPC2 increases, Isothermality (BIO2/BIO7) (* 100) decreases
ggplot(df, aes(x =  tempPC2 , y = bio3)) + geom_line()

#get loadings 
var=get_pca_var(temp.PCA)
var
corrplot(var$cos2, is.corr=FALSE)
temp.PCA
#                                                       PC1         PC2
# BIO1_Annual_Mean_Temperature_30s              -0.40586815   0.03248417  
# BIO2_Mean_Diurnal_Range_30s                   -0.22810496   0.08400206 
# BIO3_Isothermality_30s                        -0.19801593  -0.37023384 
# BIO4_Temperature_Seasonality_30s              -0.02228225   0.54936095
# BIO5_Max_Temperature_of_Warmest_Month_30s     -0.36523034   0.25396468 
# BIO6_Min_Temperature_of_Coldest_Month_30s     -0.37341627  -0.15282939 
# BIO7_Temperature_Annual_Range_30s             -0.03721039   0.52936193
# BIO8_Mean_Temperature_of_Wettest_Quarter_30s  -0.39983845  -0.04458256 
# BIO9_Mean_Temperature_of_Driest_Quarter_30s    0.06732136   0.37118918  
# BIO10_Mean_Temperature_of_Warmest_Quarter_30s -0.38475232   0.17138165 
# BIO11_Mean_Temperature_of_Coldest_Quarter_30s -0.39607769  -0.12569118  
```

# Interpretation: tempPC1 & tempPC2

Higher tempPC1 = Cooler year round; Lower tempPC1 = Warmer year round; Higher tempPC2 = More seasonality & fluctuating temps throughout the day-night and year; Lower tempPC2 = Less seasonality & more stable temps throughout the day-night and year.

# Visualization

```{r}
## Plot PCA Results: 
library(ggfortify)
library(ggplot2)
# Plot PC1 and PC2 by site (all points appear in black): 
autoplot(temp.PCA) # colour = 'site') 
# This plot prints proper PCA output. I can't get this to colour by site though because site isn't a variable in the PCA dataset

set.seed(123)
# Add jittered versions of PCA axes
df$jtempPC1 <- df$tempPC1 + rnorm(nrow(df), mean = 0, sd = 0.02)
df$jtempPC2 <- df$tempPC2 + rnorm(nrow(df), mean = 0, sd = 0.02)

# Define palette
color_palette <- c("#F3DA44", "#A0A0A0", "#89B8EB")

# Create the PCA plot with axis lines
p1 <- ggplot(data=df, aes(x=tempPC1, y=tempPC2, fill=common_name)) +
  geom_point(size=3, stroke=0.8, shape=21, color="black", alpha = 0.9) +  # Black outline, species-colored fill
  geom_hline(yintercept = 0, linetype = "dashed", color = "gray50") +  # Add horizontal axis line
  geom_vline(xintercept = 0, linetype = "dashed", color = "gray50") +  # Add vertical axis line
  scale_fill_manual(values = color_palette) +  # Use fill instead of color
  labs(x = "tempPC1 (54.3%)", y = "tempPC2 (29.9%)", color = "Species") +
  theme_bw() +
  theme(plot.background = element_blank(),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        legend.position = "none")

p1

#OPTIONAL: 
#For an interactive map so you can identify samples with 
#directlabels are needed for the below code to work
# install.packages("directlabels")
library(directlabels)
library(plotly) # use this to load the library for the below function

#For an interactive map:
# Plot with jittered axes
temp_PC1PC2 <- plot_ly(
  data = df, 
  x = ~jtempPC1, 
  y = ~jtempPC2, 
  text = ~paste("ID number:", ID_number, "Species:", sci_name), 
  color = ~sci_name, 
  colors = "Set1", 
  type = "scatter", 
  mode = "markers",
  marker = list(
    size = 6,
    opacity = 0.7,
    line = list(width = 0.5)
  )
) %>%
  layout(title = "PCA of Temperature (Colored by Species)",
         xaxis = list(title = "tempPC1"),
         yaxis = list(title = "tempPC2"))

temp_PC1PC2
```

Clear pattern of clustering in the data based on species, with plumbeous having much higher tempPC1 values (colder), then Gray, then Bell's. Plumbeous also has the most variable tempPC2 values (high seasonality/fluctuation & low seasonality/fluctuation), whereas majority of plumbeous, almost all of Gray, and all of Bell's have similar, near-zero tempPC2.The outlier gray group are the Utah samples.

# Visualization

```{r}
## Plot PCA Results: 
# Create the PCA plot with axis lines
p2 <- ggplot(data=df, aes(x=jtempPC1, y=jtempPC2, fill=Haem_01)) +
  geom_point(size=3, stroke=0.8, shape=21, color="black", alpha = 0.5) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "gray50") +  # Add horizontal axis line
  geom_vline(xintercept = 0, linetype = "dashed", color = "gray50") +  # Add vertical axis line
  scale_fill_manual(values = c("gray","purple3")) +  # Use fill instead of color
  labs(x = "tempPC1 (54.3%)", y = "tempPC2 (29.9%)", color = "Infection status") +
  theme_bw() +
  theme(plot.background = element_blank(),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        legend.position = "right")

print(p2)
```

No clear pattern in infection status.

# ------------------------------------------------------------------------

# Precipitation PCA
```{r}
#hp precipitation data
bioclim_precip <- df[c(58:65)]

# PCA of temperature data
library(stats)
precip.PCA <-
  prcomp( 
    bioclim_precip, center = TRUE, scale. = TRUE
  )
summary(precip.PCA)
#PC1 explains 61.9% of variation in the data 
#PC2 explains a further 95.1% of the variation in the data

#Adding PC1 & PC2 to df--------------------------------------------------------
# Add PCs to the dataframe as variables: 
df$precipPC1 <- precip.PCA$x[,"PC1"]
df$precipPC1 <- as.numeric(unlist(df$precipPC1))
df$precipPC2 <- precip.PCA$x[,"PC2"]
df$precipPC2 <- as.numeric(unlist(df$precipPC2))

#write.csv(df, file = "Host_Sampling_Data_20250612.csv")
```

```{r, fig.height= 8, fig.width=10}
#PCA Scree plot:
library(factoextra)
fviz_eig(precip.PCA)

#Visualizing loadings----------------------------------------------------------
#PCA Loadings:
fviz_pca_var(precip.PCA, col.var = "contrib")

#Contributions to Precipitation PC1
fviz_contrib(precip.PCA, choice = "var", axes = 1)

#For PC1 the variables below all contribute the most
#As you go up PC1
#BIO12: Annual Precipitation                                  As precipPC1 increases, Annual Precipitation increases
ggplot(df, aes(x = precipPC1, y = bio12)) + geom_line()
#BIO14: Precipitation of Driest Month                         As precipPC1 increases, Precipitation of the Driest Month increases
ggplot(df, aes(x = precipPC1, y = bio14)) + geom_line()
#BIO17: Precipitation of Driest Quarter                       As precipPC1 increases, Precipitation of the Driest Quarter increases
ggplot(df, aes(x = precipPC1, y = bio17)) + geom_line()
#BIO18: Precipitation of Warmest Quarter                      As precipPC1 increases, Precipitation of Warmest Quarter increases
ggplot(df, aes(x = precipPC1, y = bio18)) + geom_line()
#BIO19: Precipitation of Coldest Quarter                      As precipPC1 increases, Precipitation of Coldest Quarter increases
ggplot(df, aes(x = precipPC1, y = bio19)) + geom_line()
#BIO13: Precipitation of Wettest Month                        As precipPC1 increases, Precipitation of Wettest Month increases
ggplot(df, aes(x = precipPC1, y = bio13)) + geom_line()

#Contributions to Precipitation PC2
fviz_contrib(precip.PCA, choice = "var", axes = 2)
#For PC2 the variables below all contribute the most:
#As you go up PC2

#BIO15: Precipitation Seasonality (Coefficient of Variation)  As precipPC2 increases, Precipitation Seasonality decreases
ggplot(df, aes(x = precipPC2, y = bio15)) + geom_line()
#BIO16: Precipitation of Wettest Quarter                      As precipPC2 increases, Precipitation of Wettest Quarter decreases
ggplot(df, aes(x = precipPC2, y = bio16)) + geom_line()
#BIO13: Precipitation of Wettest Month                        As precipPC2 increases, Precipitation of Wettest Month decreases
ggplot(df, aes(x = precipPC2, y = bio13)) + geom_line()
#BIO18: Precipitation of Warmest Quarter                      As precipPC2 increases, Precipitation of Warmest Quarter decreases
ggplot(df, aes(x = precipPC2, y = bio18)) + geom_line()

# get loadings
var1=get_pca_var(precip.PCA)
var1
precip.PCA
#                                                                     PC1         PC2         
# BIO12_Annual_Precipitation_30s                                  0.4435427   0.0225780  
# BIO13_Precipitation_of_Wettest_Month_30s                        0.3573613  -0.3674372 
# BIO14_Precipitation_of_Driest_Month_30s                         0.3905126   0.2176370 
# BIO15_Precipitation_Seasonality_coefficient.of.variation_30s   -0.1292692  -0.5815958 
# BIO16_Precipitation_of_Wettest_Quarter_30s                      0.3396100  -0.3967643 
# BIO17_Precipitation_of_Driest_Quarter_30s                       0.3649689   0.3308844  
# BIO18_Precipitation_of_Warmest_Quarter_30s                      0.3606887  -0.3570240 
# BIO19_Precipitation_of_Coldest_Quarter_30s                      0.3573773   0.2906682 
var=get_pca_var(precip.PCA)
var
corrplot(var$cos2, is.corr=FALSE)
```

#### Interpretation: precipPC1 & precipPC2

Higher precipPC1 = more precipitation; lower precipPC1 = less precipitation; higher precipPC2 = precipitation throughout seasons more stable; lower precipPC2 = More seasonal precipitation and less precipitation during driest quarter.

#Visualization

```{r}
## Plot PCA Results: 
library(ggfortify)
library(ggplot2)
set.seed(123)

# Add jittered versions of PCA axes
df$jprecipPC1 <- df$precipPC1 + rnorm(nrow(df), mean = 0, sd = 0.02)
df$jprecipPC2 <- df$precipPC2 + rnorm(nrow(df), mean = 0, sd = 0.02)

# Define a colorblind-friendly palette
color_palette <- c("#F3DA44", "#A0A0A0", "#89B8EB")

# Create the PCA plot with axis lines
p3 <- ggplot(data=df, aes(x=jprecipPC1, y=jprecipPC2, fill=common_name)) +
  geom_point(size=3, stroke=0.8, shape=21, color="black", alpha = 0.9) +  # Black outline, species-colored fill
  geom_hline(yintercept = 0, linetype = "dashed", color = "gray50") +  # Add horizontal axis line
  geom_vline(xintercept = 0, linetype = "dashed", color = "gray50") +  # Add vertical axis line
  scale_fill_manual(values = color_palette) +  # Use fill instead of color
  labs(x = "precipPC1 (61.9%)", y = "precipPC2 (33.2%)", color = "Species") +
  theme_bw() +
  theme(plot.background = element_blank(),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        legend.position = "blank")

print(p3)

#OPTIONAL: 
#For an interactive map so you can identify samples with  directlabels are needed for the below code to work
# install.packages("directlabels")
library(directlabels)
library(plotly) # use this to load the library for the below function

#For an interactive map:
# Plot with jittered axes
precip_PC1PC2 <- plot_ly(
  data = df, 
  x = ~jprecipPC1, 
  y = ~jprecipPC2, 
  text = ~paste("ID number:", ID_number, "Species:", sci_name), 
  color = ~sci_name, 
  colors = "Set1", 
  type = "scatter", 
  mode = "markers",
  marker = list(
    size = 6,
    opacity = 0.7,
    line = list(width = 0.5)
  )
) %>%
  layout(title = "PCA of Precipitation (Colored by Species)",
         xaxis = list(title = "tempPC1"),
         yaxis = list(title = "tempPC2"))

precip_PC1PC2
```

Somewhat clear pattern of clustering in the data based on species, with plumbeous having much higher precipPC1 values (wetter), then gray, then Bell's. Plumbeous also has the most variable precipPC2 values (high precip seasonality), whereas the gray and Bell's are less variable, near zero precipPC2. Utah gray vireos still stand out.

```{r}
# Create the PCA plot with axis lines
p4 <- ggplot(data=df, aes(x=jprecipPC1, y=jprecipPC2, fill=Haem_01)) +
  geom_point(size=3, stroke=0.8, shape=21, color="black", alpha = 0.5) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "gray50") +  # Add horizontal axis line
  geom_vline(xintercept = 0, linetype = "dashed", color = "gray50") +  # Add vertical axis line
  scale_fill_manual(values = c("gray","purple3")) +  # Use fill instead of color
  labs(x = "precipPC1 (61.9%)", y = "precipPC2 (33.2%)", color = "Infection status") +
  theme_bw() +
  theme(plot.background = element_blank(),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        legend.position = "right")

print(p4)
```

No clear pattern infection status yet, though it appears as if there are more uninfected individuals at lower precipPC1 (drier overall).

# Supplemental Figure

```{r}
library(gridExtra)
library(ggpubr)
library(cowplot)

# Create the PCA plot with axis lines
p5 <- ggplot(data=df, aes(x=precipPC1, y=precipPC2, fill=common_name)) +
  geom_point(size=3, stroke=0.8, shape=21, color="black") +  # Black outline, species-colored fill
  geom_hline(yintercept = 0, linetype = "dashed", color = "gray50") +  # Add horizontal axis line
  geom_vline(xintercept = 0, linetype = "dashed", color = "gray50") +  # Add vertical axis line
  scale_fill_manual(values = color_palette) +  # Use fill instead of color
  labs(x = "precipPC1 (61.9%)", y = "precipPC2 (33.2%)", fill="Species") +
  theme_bw() +
  theme(plot.background = element_blank(),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        legend.position = "bottom",  # Place the legend at the top
        legend.direction = "horizontal")

legend <- get_legend(p5)

# Combine the two plots and the legend
combined_plot <- grid.arrange(
  p1, p5, legend, 
  ncol = 1, 
  heights = c(1, 1, 0.1)  # Adjust the heights so the legend takes less space
)# Combine plots with legend below

# Save the combined plot as a PDF
ggsave("FigS1.pdf", combined_plot, width = 10, height = 8)
```
